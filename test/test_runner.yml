- hosts: all
  connection: local
  vars:
    registryUrl: "{{ lookup('env','registryUrl') }}"
    registryName: "{{ lookup('env','registryName') }}"

  tasks:
    - name: export fullVersion
      shell: "/bin/bash ../BuildEnv/getVersion.sh"
      register: version_script
    
    - name: stop all running containers
      become: yes
      shell: docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)

    - name: Install test packages
      become: yes
      apt: name={{item}} state=present
      with_items:
        - ruby-dev
        - ruby-rest-client

    - name: Make test files executable
      file:
        path: "{{item}}"
        mode: 0755
      with_items:
        - "./test_book-api.rb"
        - "./test_book-website.rb"

    - name: Run book-api container
      become: yes
      docker_container:
        name: bookapi-{{ version_script.stdout }}
        image: "{{registryUrl}}/{{ version_script.stdout }}/book-api:latest"
        command: "/go/src/app/src/book-api"
        published_ports: "8222:8222"
        state: started
        detach: yes
        
    - name: Test book-api
      become: yes
      shell: /bin/bash -c "./test_book-api.rb"   
      register: test_book_api

    - name: stop book-api container
      become: yes
      docker_container:
        name: bookapi-{{ version_script.stdout }}
        state: stopped
        
    - name: Run book-website container
      become: yes
      docker_container:
        name: bookwebsite-{{ version_script.stdout }}
        image: "{{registryUrl}}/{{ version_script.stdout }}/book-website:latest"
        published_ports: "80:80"
        state: started
        detach: yes

    - name: Test book-website
      become: yes
      shell: /bin/bash -c "sleep 10;./test_book-website.rb"   
      register: test_book_website

    - name: stop book-website container
      become: yes
      docker_container:
        name: bookwebsite-{{ version_script.stdout }}
        state: stopped                